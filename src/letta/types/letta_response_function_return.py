# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import datetime as dt
import typing
from .letta_response_function_return_status import LettaResponseFunctionReturnStatus
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class LettaResponseFunctionReturn(UniversalBaseModel):
    """
    A message representing the return value of a function call (generated by Letta executing the requested function).

    Attributes:
        function_return (str): The return value of the function
        status (Literal["success", "error"]): The status of the function call
        id (str): The ID of the message
        date (datetime): The date the message was created in ISO format
        function_call_id (str): A unique identifier for the function call that generated this message
    """

    id: str
    date: dt.datetime
    message_type: typing.Optional[typing.Literal["function_return"]] = None
    function_return: str
    status: LettaResponseFunctionReturnStatus
    function_call_id: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
