# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .letta_schemas_openai_openai_tool_call import LettaSchemasOpenaiOpenaiToolCall
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class RequiredAction(UniversalBaseModel):
    type: typing.Optional[str] = None
    submit_tool_outputs: typing.List[LettaSchemasOpenaiOpenaiToolCall]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
